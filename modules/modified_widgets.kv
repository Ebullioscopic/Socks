<MDPasswordTextField>:
    size_hint_y: None
    height: text_field.height
    text: text_field.text
    MDTextField:
        id: text_field
        hint_text: root.hint_text
        text: root.text
        password: True
        icon_left: "key-variant"
        write_tab: root.write_tab
        on_text_validate: root.on_text_validate
    MDIconButton:
        icon: "eye-off"
        pos_hint: {"center_y": .5}
        pos: text_field.width - self.width + dp(8), 0
        theme_text_color: "Hint"
        on_release:
            self.icon = "eye" if self.icon == "eye-off" else "eye-off"
            text_field.password = False if text_field.password is True else True

<ChatTextField>:
    size_hint_y: None
    height: text_field.height
    text: text_field.text
    #on_text_validate: text_field.on_text_validate
    MDTextField:
        id: text_field
        hint_text: root.hint_text
        text: root.text
        password: False
        icon_left: "format-text"
        write_tab: root.write_tab
        on_text_validate: root.on_text_validate
    MDIconButton:
        icon: "paperclip"
        pos_hint: {"center_y": .5}
        pos: text_field.width - self.width + dp(8), 0
        theme_text_color: "Hint"
        #on_release:
            #self.icon = "paperclip" if self.icon == "paperclip" else "paperclip"
            #text_field.password = False if text_field.password is True else True

<SpeechRequest>:
    size_hint: None, None
    size: 400, 400
    background_color: 1, 1, 1, 0
    separator_color: 1, 1, 1, 0
    title: "Listening..."
    AnchorLayout:
        align: "center"  
        Image:
            source: "./resources/images/voice.gif"
            anim_delay: 0.1
            color: 0, 1, 0.02, 1
        # Label:
        #     blur_radius: 20
        #     mipmap: True

            # canvas:
            #     Color:
            #         rgb: 1, 1, 1
            #     Ellipse:
            #         #pos: 280, 200
            #         pos: self.x,self.y
            #         size: 100 , 100 
            #         source: './resources/images/voice.gif'
            #         #texture: app.logo.texture
            #         angle_start: 0
            #         angle_end: 360

<Command>
    size_hint_y: None
    pos_hint: {"right": .98}
    height: self.texture_size[1]
    padding: 12, 10
    #theme_text_color: "Custom"
    #text_color: , 0, 0, 1
    canvas.before:
        Color:
            rgb: (0.00, 0.36, 0.29, 1)
        RoundedRectangle:
            size: self.width, self.height
            pos: self.pos
            radius: [23, 23, 0, 23]
<Response>
    size_hint_y: None
    pos_hint: {"x": .02}
    height: self.texture_size[1]
    padding: 12, 10
    canvas.before:
        Color:
            rgb: (0.13, 0.17, 0.20, 1)
        RoundedRectangle:
            size: self.width, self.height
            pos: self.pos
            radius: [23, 23, 23, 0]

<AKSpinnerBase>:
    size_hint: None, None


<AKSpinnerFoldingCube>:
    size: root.spinner_size, root.spinner_size

    canvas:
        PushMatrix
        Rotate:
            axis: 0, 0 , 1
            angle: root.angle
            origin: self.center
        Color:
            rgba: root.color if root.color else root.theme_cls.primary_color
            a:root._cube1a
        Rectangle:
            size: root._cubeitem1
            pos: [self.x, self.y]
        Color:
            rgba: root.color if root.color else root.theme_cls.primary_color
            a:root._cube2a
        Rectangle:
            size: root._cubeitem2
            pos: [self.x, self.y+self.height / 2]
        Color:
            rgba: root.color if root.color else root.theme_cls.primary_color
            a:root._cube3a
        Rectangle:
            size: root._cubeitem3
            pos: [self.x + self.width / 2, self.y + self.height - root._cubeitem3[1]]
        Color:
            rgba: root.color if root.color else root.theme_cls.primary_color
            a:root._cube4a
        Rectangle:
            size: root._cubeitem4
            pos: [self.x + self.width - root._cubeitem4[0], self.y]
        PopMatrix

<LoadingAnimation>:
    size_hint: None, None
    size: 400, 650
    background_color: 1, 1, 1, 0
    separator_color: 1, 1, 1, 0
    title: ""
    AnchorLayout:
        align: "center"            
        AKSpinnerFoldingCube:
            id: foldingcube
            spinner_size: dp(40)
            pos_hint: {"center_x": .5, "center_y": .4}
            angle: 45
